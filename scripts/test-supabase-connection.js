const { createClient } = require('@supabase/supabase-js');
require('dotenv').config();

async function testConnection() {
  console.log('๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ูุน Supabase...\n');
  
  // ูุฑุงุกุฉ ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช
  const dbUrl = process.env.DATABASE_URL;
  const dbHost = process.env.DATABASE_HOST;
  const dbPort = process.env.DATABASE_PORT;
  const dbName = process.env.DATABASE_NAME;
  const dbUser = process.env.DATABASE_USERNAME;
  const dbPassword = process.env.DATABASE_PASSWORD;
  
  console.log('๐ ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช:');
  console.log(`Host: ${dbHost}`);
  console.log(`Port: ${dbPort}`);
  console.log(`Database: ${dbName}`);
  console.log(`User: ${dbUser}`);
  console.log(`SSL: ${process.env.DATABASE_SSL}`);
  console.log('');
  
  if (!dbUrl && !dbHost) {
    console.log('โ ูู ูุชู ุงูุนุซูุฑ ุนูู ุฅุนุฏุงุฏุงุช ูุงุนุฏุฉ ุงูุจูุงูุงุช ูู ููู .env');
    console.log('ุชุฃูุฏ ูู ูุณุฎ ูุญุชููุงุช supabase-config.env ุฅูู .env');
    return;
  }
  
  try {
    // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจุงุณุชุฎุฏุงู pg
    const { Client } = require('pg');
    
    const client = new Client({
      connectionString: dbUrl,
      host: dbHost,
      port: dbPort,
      database: dbName,
      user: dbUser,
      password: dbPassword,
      ssl: process.env.DATABASE_SSL === 'true' ? { rejectUnauthorized: false } : false
    });
    
    await client.connect();
    console.log('โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ ูุน ูุงุนุฏุฉ ุจูุงูุงุช Supabase!');
    
    // ุงุฎุชุจุงุฑ ุงุณุชุนูุงู ุจุณูุท
    const result = await client.query('SELECT version()');
    console.log('๐ ุฅุตุฏุงุฑ PostgreSQL:', result.rows[0].version);
    
    // ุงุฎุชุจุงุฑ ุงูุฌุฏุงูู ุงูููุฌูุฏุฉ
    const tablesResult = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      ORDER BY table_name
    `);
    
    console.log('\n๐ ุงูุฌุฏุงูู ุงูููุฌูุฏุฉ:');
    if (tablesResult.rows.length > 0) {
      tablesResult.rows.forEach(row => {
        console.log(`  - ${row.table_name}`);
      });
    } else {
      console.log('  ูุง ุชูุฌุฏ ุฌุฏุงูู (ูุฐุง ุทุจูุนู ูู ุงูุจุฏุงูุฉ)');
    }
    
    await client.end();
    console.log('\nโ ุชู ุฅุบูุงู ุงูุงุชุตุงู ุจูุฌุงุญ');
    
  } catch (error) {
    console.log('โ ุฎุทุฃ ูู ุงูุงุชุตุงู:', error.message);
    console.log('\n๐ง ูุตุงุฆุญ ูุญู ุงููุดููุฉ:');
    console.log('1. ุชุฃูุฏ ูู ุตุญุฉ ุฅุนุฏุงุฏุงุช Supabase');
    console.log('2. ุชุฃูุฏ ูู ุฃู ูููุฉ ุงููุฑูุฑ ุตุญูุญุฉ');
    console.log('3. ุชุฃูุฏ ูู ุฃู ุงููุดุฑูุน ูุดุท ูู Supabase');
    console.log('4. ุชุฃูุฏ ูู ุฅุนุฏุงุฏุงุช SSL');
  }
}

if (require.main === module) {
  testConnection();
}

module.exports = { testConnection };

